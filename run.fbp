'/home/bergie/Projects/bergie' -> IN Source(Split)
'/home/bergie/Projects/noflo-jekyll/bergie' -> IN Destination(Split)

Source() OUT -> DIRECTORY GetConfig(jekyll/GetConfig)
GetConfig() CONFIG -> IN Display(Output)

Source() OUT -> IN FindFiles(Merge)
FindFiles() OUT -> DIRECTORY LoadDocuments(jekyll/LoadDocuments)
LoadDocuments() SUBDIRECTORY -> IN FindFiles()

'text' -> ROUTES DetermineType(jekyll/MimeRouter)
LoadDocuments() DOCUMENT -> IN DetermineType()

# Text files parsed for Front Matter
DetermineType() OUT -> IN Read(ReadFile)
Read() OUT -> IN Clean(RemoveGroups)
Clean() OUT -> CONTENT Parse(yaml/ParseFrontmatter)
Parse() RESULTS -> IN Drop(Drop)

# Binary files that will be copied as-is
Source() OUT -> PATTERN NewPath(Replace)
Destination() OUT -> REPLACEMENT NewPath()
'/_' -> REGEXP FilterDirs(FilterPacket)
DetermineType() MISSED -> IN FilterDirs()
FilterDirs() OUT -> IN DropDir(Drop)
FilterDirs() MISSED -> IN NewPath()
NewPath() OUT -> IN NewFile(Split)

# Create folders for the files
NewFile() OUT -> IN NewDir(DirName)
NewDir() OUT -> IN UniqueDir(UniquePacket)
UniqueDir() OUT -> IN MakeDir(MakeDir)

# Copy files over once directories have been created
NewFile() OUT -> COLLECT NewFiles(jekyll/DirectoryBuffer)
MakeDir() OUT -> RELEASE NewFiles()
NewFiles() OUT -> IN PrepareCopy(Split)
PrepareCopy() OUT -> DESTINATION Copy(CopyFile)
Destination() OUT -> PATTERN OrigPath(Replace)
Source() OUT -> REPLACEMENT OrigPath()
PrepareCopy() OUT -> IN OrigPath() OUT -> SOURCE Copy()
Copy() OUT -> IN Display(Output)
